package com.pronto.licenseserver.test.execution;

import java.io.File;
import java.util.Arrays;
import java.util.Collection;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.pronto.licenseserver.test.dataobject.LoginData;
import com.pronto.licenseserver.test.helper.KeywordHandler;
import com.pronto.licenseserver.test.helper.LoginForm;
import com.pronto.licenseserver.test.helper.ResultHandler;
import com.pronto.licenseserver.test.helper.TestCasePrevLoad;
import com.pronto.licenseserver.test.pageobject.HomePage;
import com.pronto.licenseserver.test.pageobject.LoginPage;
import com.pronto.licenseserver.test.utils.FileOperations;
import com.pronto.licenseserver.test.utils.ListComparison;


public class NavigationExecution extends TestCasePrevLoad {

	int execuionCount = 1;// Value set to 1, skip the headers
	String status;
	String reject = "Empty";
	String path = "data/TestCases/UserlevelCheck.xls";

	// C://Users//ganukay.PRONTO//workspace//HubTest//data//Data_New.xls
	@Test(dataProvider = "loginData", dataProviderClass = LoginData.class)
	public void homePageValidation(String userName, String password,
			String userLevel, String accessMenus, String homeVisiblePage)
			throws InterruptedException {
		
		try {
			driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
			WebDriverWait wait = new WebDriverWait(driver, 20);

			// setting login Data
//			LoginData loginData = new LoginData();
//			loginData.setUserName(userName);
//			loginData.setPassword(password);

			driver.get("http://172.17.4.74:8080/LicensingServer/login");

//			LoginPage loginPage = new LoginPage(driver);
//			loginPage.newUserLogin(loginData);
			HomePage hm = LoginForm.login(driver, userName, password);
			Thread.sleep(10000);

			Assert.assertEquals(driver.getTitle().contains("License Hub"), true);

//			HomePage hm = new HomePage(driver);
			Collection<String> s = Arrays.asList(accessMenus.split(","));

			Assert.assertEquals(
					ListComparison.ArraysEquals(
							hm.getUserSpecficManuListString(), s), true);

			Assert.assertEquals(hm.getHomePageVisibleElement(homeVisiblePage)
					.getText().contains(homeVisiblePage), true);

			// If all above steps passed status should be set as PASS
			status = KeywordHandler.testPass;

		} catch (AssertionError e) {
			// if above steps failed Status should be set to fail
			status = KeywordHandler.testFail;
			FileOperations.captureScreenshot(
					new Exception().getStackTrace()[0].getMethodName(), driver,
					userName);
			reject = e.getMessage();
			throw e;
		} finally {
			System.out.println(status);
			ResultHandler.writeStatus(new File(path),
					new Exception().getStackTrace()[0].getMethodName(),
					execuionCount, status, reject);
			execuionCount++;
		}
	}
		

}
